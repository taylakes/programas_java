Ejercicio 1. Para la clase Automóvil defina los comparadores apropiados para ordenar una 
colección de Automoviles por marca, por modelo y por año de patentamiento. Modifique la clase 
según las necesidades y tenga en cuenta que el ordenamiento natural es por marca.
public class Automovil
{
 private String marca;
 private String modelo;
 private int anio;
 
 public Automovil(String marca, String modelo, String anio)
{
 this.marca=marca;
 this.modelo=modelo;
 this.anio=anio;
}
}

Ejercicio 2. La empresa MercadoNegro.com desea adherirse al Cyber Monday para ello desea que 
sus productos agregados al carrito de compras calculen de manera automática los descuentos. La 
empresa cuenta con tres tipos de productos: electrónica, línea blanca y electrodomésticos.
Los productos de electrónica tienen un 40% de descuento, los productos de línea blanca tienen un 
35% de descuento y los electrodomésticos un 60% de descuento.
Se pide:
1) Cree la jerarquía de clases apropiada para manipular este tipo de objetos, previendo la
capacidad de calcular el valor de los productos.
2) Cree la estructura adecuada para que el carro de compras almacene los objetos de distinto
tipo.
3) Calcule el valor total de los artículos del carro de compras.
4) Imprima un listado de los productos del carro de compras ordenados por valor, con los 
descuentos aplicados.
5) Pruebe su modelo desde un método estático. No es necesaria la creación de una interfaz 
gráfica.
Se valorará la limpieza y elegancia del código y APIs.
